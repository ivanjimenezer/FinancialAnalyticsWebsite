# Convertir a numerico
if (tonum ==TRUE){
columna <- as.numeric(columna)
}
return(columna)
}
reem_mode <- function(columna, oldvalues){
# Calculate the mode of non-empty string values
non_empty_values <- columna[!columna %in% oldvalues]
mode_value <- names(sort(table(non_empty_values), decreasing = TRUE)[1])
print(paste("Mode value:", mode_value))
# Replace empty strings with the mode
columna[columna %in% oldvalues] <- mode_value
return(columna)
}
countv<- function(columna){
cem <- sum(columna == "")
print(paste("Empty_strings: ", cem))
cem2 <- sum(columna != "")
print(paste("Numeric_strings: ", cem2))
}
countuni <- function(column){
unique_count <- table(column)
# Print the count of unique values
print(unique_count)
}
rep <- tmp_dem[tmp_dem$folio == "1", ]
rep
tmp_dem
rep <- tmp_dem[tmp_dem$folio == "0000001", ]
rep
rep <- tmp_dem[tmp_dem$folio == "0000001" & tmp_dem$folio == "0000002", ]
rep
rep <- tmp_dem[tmp_dem$folio == "0000001" |  tmp_dem$folio == "0000002", ]
rep
rep <- tmp_dem[tmp_dem$n_ren == "01"  , ]
countv(rep)
rep <- tmp_dem[tmp_dem$n_ren == "01"  , ]
head(rep, n=10)
nrow(rep)
# Creo la tabla concentradora a partir de la tabla de hogares
tmp_con <- read.csv(file = "datos/TCONCENTRADORA.csv", header=TRUE, sep=",", colClasses="character")
tmp_con
# FUNCIONES
dummy <- function(dataset, column, values, values_names) {
# Create a factor variable with levels in the desired order
column_factor <- factor(column, levels= values, labels = values_names, )
# Create dummy variables from the factor variable
dummy_matrix <- model.matrix(~ column_factor - 1, data = dataset)
# Set the column names to match the values
colnames(dummy_matrix) <- levels(column_factor)
# Convert the dummy matrix into a data frame
dummy_df <- as.data.frame(dummy_matrix)
print(head(dummy_df))
return(cbind(dataset, dummy_df))
}
# Por default  considera los ceros dentro de la media
reem_med<- function(columna,oldvalues, usezero=FALSE, zeros=c(0)) {
if(usezero == FALSE){
mean_value <- round(mean(as.numeric(columna[!columna %in% oldvalues & !columna %in% zeros]), na.rm = TRUE))
}
else{
mean_value <- round(mean(as.numeric(columna[!columna %in% oldvalues]), na.rm = TRUE))
}
print(paste("Mean value:", mean_value))
columna[columna %in% oldvalues] <- mean_value
columna <- as.numeric(columna)
return(columna)
}
reem_multiple <- function(columna, oldvalues, newvalues, tonum=FALSE, match = FALSE){
if(match==TRUE){
columna <- ifelse(columna %in% oldvalues, newvalues[match(columna,oldvalues)], columna)
}else{
replaceval<- columna %in% oldvalues
columna[replaceval] <- newvalues[1]
}
# Convertir a numerico
if (tonum ==TRUE){
columna <- as.numeric(columna)
}
return(columna)
}
reem_mode <- function(columna, oldvalues){
# Calculate the mode of non-empty string values
non_empty_values <- columna[!columna %in% oldvalues]
mode_value <- names(sort(table(non_empty_values), decreasing = TRUE)[1])
print(paste("Mode value:", mode_value))
# Replace empty strings with the mode
columna[columna %in% oldvalues] <- mode_value
return(columna)
}
countv<- function(columna){
cem <- sum(columna == "")
print(paste("Empty_strings: ", cem))
cem2 <- sum(columna != "")
print(paste("Numeric_strings: ", cem2))
}
countuni <- function(column){
unique_count <- table(column)
# Print the count of unique values
print(unique_count)
}
# SEXO DE LA PERSONA - SX_JEFE
head(tmp_con$SX_JEFE,n=10)
head(tmp_con$GPO_EDAD,n=10)
head(rep, n=10)
tmp_dem <- tmp_dem <- read.csv(file = "datos/TSDEM.csv", header=TRUE, sep=",", colClasses="character")
tmp_dem <- conversor(tmp_dem)
conversor<- function(data_frame) {
# Get the column names
col_names <- names(data_frame)
# Replace all uppercase letters with their lowercase counterparts in column names
new_col_names <- chartr("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "abcdefghijklmnopqrstuvwxyz", col_names)
# Set the modified column names back to the data frame
names(data_frame) <- new_col_names
# Return the modified data frame
return(data_frame)
}
nrow(tmp_viv)
nrow(tmp_con)
countuni(tmp_con$CAT_POS)
countuni(tmp_con$CAT_OCUP)
countuni(tmp_con$CACVO_FIN)
countuni(tmp_con$C_CTACHQS)
countuni(tmp_con$	CACVO_NOFN)
countuni(tmp_con$CINGXINVRS)
#Monto de crédito de vivienda principal	MNTO_VPAL
countuni(tmp_con$CRED_NOHIP)
countuni(tmp_con$CRED_REST)
countuni(tmp_con$SIN_DEUDA)
nrow(tmp_viv)
head(tmp_viv$p4_6)
head(tmp_viv$folio, n=10)
head(tmp_viv)
nrow(tmp_viv)
nrow(tmp_viv$p4_6)
nrows(tmp_viv$p4_6)
nrow(tmp_viv)
selviv <- data.frame(folio = tmp_viv$folio, numDormi=tmp_viv$p3_1, numRoom = tmp_viv$p3_2,
numbano=tmp_viv$p3_4, mtcuad = tmp_viv$p3_8_1, rentaviv = tmp_viv$p4_6 )
head(selviv, n=10)
head(tmp_dem)
str(tmp_dem$edad)
tmp_dem <- dummy(tmp_dem, tmp_dem$sexo,c(1,2), c("Hombre","Mujer"))
countuni(tmp_dem$sexo)
head(tmp_dem)
rep <- tmp_dem[tmp_dem$n_ren == "01"  , ]
nrow(rep)
head(rep, n=10)
tmp_dem<- tmp_dem[tmp_dem$n_ren == "01"  , ]
str(tmp_dem$edad)
head(tmp_dem)
#-------------------EDAD--------------------
rep <- as.numeric(tmp_dem$edad)
rep <- tmp_dem[tmp_dem$edad <= 17, ]
countuni(rep$edad)
str(rep$edad)
#Eliminamos a los menores de edad
tmp_dem<- tmp_dem[tmp_dem$edad > 17 & tmp_dem$edad != 98, ]
countuni(tmp_dem$edad)
tmp_dem$edad <- reem_med(tmp_dem$edad, c(99))
head(tmp_con$CAT_ESCOL,n=10)
countv(tmp_dem$niv)
countuni(tmp_dem$niv)
tmp_dem$niv <- reem_mode(tmp_dem$niv,c("","99"))
countuni(tmp_dem$niv)
education_levels <- c(
"EDNinguno",
"EDkinder",
"EDPrim",
"EDSec",
"EDTecSec",
"EdNormal",
"EDBach",
"EDTecPrep",
"EDLic",
"EDMast",
"EDDoc"
)
values <- c(
"00",
"01",
"02",
"03",
"04",
"05",
"06",
"07",
"08",
"09",
"10"
)
countuni(tmp_dem$niv)
countuni(tmp_dem$niv)
countuni(tmp_con$CAT_ESCOL)
countuni(tmp_dem$p2_8)
marital_status <- c(
"UnionL",
"Separado",
"Divorci",
"Viudo",
"Casado",
"Soltero",
"NoSabe"
)
values2 <- c(
"1",
"2",
"3",
"4",
"5",
"6",
"9"
)
tmp_dem <- dummy(tmp_dem,tmp_dem$p2_8,values2, marital_status)
head(tmp_dem)
seldem <- data.frame(folio = tmp_dem$folio, Hombre=tmp_dem$Hombre,Mujer=tmp_dem$Mujer , edad= tmp_dem$edad,
UnionL=tmp_dem$UnionL, Separado =tmp_dem$Separado, Divorci =tmp_dem$Divorci,Viudo=tmp_dem$Viudo,
Casado=tmp_dem$Casado, Soltero=tmp_dem$Soltero, NoSabe=tmp_dem$NoSabe)
head(seldem, n=10)
head(selviv, n=10)
countnum(tmp_viv$tloc)
countuni(tmp_mod$p8_9_2)
tmp_mod <- read.csv(file = "datos/TMODULO.csv", header=TRUE, sep=",", colClasses="character")
tmp_mod
tmp_mod <- conversor(tmp_mod)
nrow(tmpmod)
nrow(tmp_mod)
head(tmp_mod)
tmp_mod <- conversor(tmp_mod)
nrow(tmp_mod)
head(tmp_mod)
tmp_mod2<- tmp_mod[tmp_mod$n_ren == "01"  , ]
nrow(tmp_mod2)
head(tmp_mod2)
nrow(tmp_mod2)
nrow(tmp_con)
tmp_mod<- tmp_mod[tmp_mod$n_ren == "01" , ]
nrow(tmp_mod)
nrow(tmp_con)
#----------------DE CUANTAS PROPIEDADES ERES DUEÑO-------------
countv(tmp_mod$p5_2)
countuni(tmp_mod$p5_2)
tmp_mod$p5_2 <- reem_multiple(tmp_mod$p5_2, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p5_2)
#-------------------DE CUANTOS NEGOCIOS ERES DUEÑO O COMPARTES------------------------
tmp_mod$dueno_negocio <- 0
tmp_mod$p6_2_1 <- reem_multiple(tmp_mod$p6_2_1, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p6_2_1)
tmp_mod$p6_2_2 <- reem_multiple(tmp_mod$p6_2_2, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p6_2_2)
tmp_mod$dueno_negocio <- ifelse(as.integer(tmp_mod$p6_2_1)>= 1 | as.integer(tmp_mod$p6_2_2) >= 1, ifelse(as.integer(tmp_mod$p6_2_1)== 0 & as.integer(tmp_mod$p6_2_2) != 0,tmp_mod$p6_2_2, tmp_mod$p6_2_1), 0)
countuni(tmp_mod$dueno_negocio)
countuni(tmp_mod$p6_2_1)
countuni(tmp_mod$p6_2_2)
#--------------------DE CUANTOS AUTOS ES DUEÑO-----------------------------------------
str(tmp_mod$p7_2_1)
tmp_mod$p7_2_1 <- reem_multiple(tmp_mod$p7_2_1, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p7_2_1)
# No considera a los valores zero
rep <- reem_med(tmp_mod$p7_2_1, c(8,9), zero = TRUE )
countuni(rep)
#--------------------DE CUANTAS MOTOS ES DUEÑO----------------------------------------
countuni(tmp_mod$p7_2_2)
tmp_mod$p7_2_2 <- reem_multiple(tmp_mod$p7_2_2, c(""), c("0"), tonum=TRUE)
tmp_mod$p7_2_2 <- reem_med(tmp_mod$p7_2_2, c(8), zero = TRUE )
#--------------------CUANTAS TARJETAS DE CREDITO DPARTAMENTAL TIENE-----------------------------------------
#p8_9_1
countv(tmp_mod$p8_9_1)
tmp_mod$p8_9_1 <- reem_multiple(tmp_mod$p8_9_1, c(""),c("0"), tonum=TRUE)
tmp_mod$p8_9_1 <- reem_med(tmp_mod$p8_9_1, c(8,9))
#--------------------CUANTAS TARJETAS DE CREDITO BANCARIO TIENE-----------------------------------------
countv(tmp_mod$p8_9_2)
countuni(tmp_mod$p8_9_2)
tmp_mod$p8_9_2 <- reem_multiple(tmp_mod$p8_9_2, c(""),c("0"), tonum=TRUE)
tmp_mod$p8_9_2 <- reem_med(tmp_mod$p8_9_2, c(8,9))
countuni(tmp_mod$p8_9_2)
#--------------------CUANTO tiene en cuentas  de ahorro-----------------------------------------
countv(tmp_mod$p9_5a_3)
rep <- reem_multiple(tmp_mod$p9_5a_3, c(""),c("0"), tonum=TRUE)
countv(rep)
rep <- reem_med(rep, c(999999888,999999999))
tmp_mod$p9_5a_3 <- rep
#--------------------CUANTAS TARJETAS DE CREDITO DPARTAMENTAL TIENE-----------------------------------------
#p8_9_1
countv(tmp_mod$p8_9_1)
tmp_mod$p8_9_1 <- reem_multiple(tmp_mod$p8_9_1, c(""),c("0"), tonum=TRUE)
tmp_mod$p8_9_1 <- reem_med(tmp_mod$p8_9_1, c(8,9))
#--------------------CUANTAS TARJETAS DE CREDITO BANCARIO TIENE-----------------------------------------
countv(tmp_mod$p8_9_2)
countuni(tmp_mod$p8_9_2)
tmp_mod$p8_9_2 <- reem_multiple(tmp_mod$p8_9_2, c(""),c("0"), tonum=TRUE)
tmp_mod$p8_9_2 <- reem_med(tmp_mod$p8_9_2, c(8,9))
countuni(tmp_mod$p8_9_2)
#--------------------CUANTO tiene en cuentas  de ahorro-----------------------------------------
countv(tmp_mod$p9_5a_3)
rep <- reem_multiple(tmp_mod$p9_5a_3, c(""),c("0"), tonum=TRUE)
countv(rep)
rep <- reem_med(rep, c(999999888,999999999))
tmp_mod$p9_5a_3 <- rep
countv(tmp_mod$p10_2_6_1)
tmp_mod$dueno_negocio <- 0
tmp_mod$p6_2_1 <- reem_multiple(tmp_mod$p6_2_1, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p6_2_1)
tmp_mod$p6_2_2 <- reem_multiple(tmp_mod$p6_2_2, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p6_2_2)
tmp_mod$dueno_negocio <- ifelse(as.integer(tmp_mod$p6_2_1)>= 1 | as.integer(tmp_mod$p6_2_2) >= 1, ifelse(as.integer(tmp_mod$p6_2_1)== 0 & as.integer(tmp_mod$p6_2_2) != 0,tmp_mod$p6_2_2, tmp_mod$p6_2_1), 0)
countuni(tmp_mod$dueno_negocio)
countuni(tmp_mod$p6_2_1)
countuni(tmp_mod$p6_2_2)
countuni(tmp_mod$p5_2)
countuni(tmp_mod$p7_2_1)
tmp_mod$p7_2_1 <- reem_med(tmp_mod$p7_2_1, c(8,9), zero = TRUE )
countuni(tmp_mod$p7_2_1)
countuni(tmp_mod$p7_2_2)
tmp_mod <- read.csv(file = "datos/TMODULO.csv", header=TRUE, sep=",", colClasses="character")
tmp_mod <- conversor(tmp_mod)
nrow(tmp_mod)
head(tmp_mod)
tmp_mod<- tmp_mod[tmp_mod$n_ren == "01" , ]
nrow(tmp_mod)
nrow(tmp_con)
#----------------DE CUANTAS PROPIEDADES ERES DUEÑO-------------
countv(tmp_mod$p5_2)
countuni(tmp_mod$p5_2)
tmp_mod$p5_2 <- reem_multiple(tmp_mod$p5_2, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p5_2)
#-------------------DE CUANTOS NEGOCIOS ERES DUEÑO O COMPARTES------------------------
tmp_mod$dueno_negocio <- 0
tmp_mod$p6_2_1 <- reem_multiple(tmp_mod$p6_2_1, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p6_2_1)
tmp_mod$p6_2_2 <- reem_multiple(tmp_mod$p6_2_2, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p6_2_2)
tmp_mod$dueno_negocio <- ifelse(as.integer(tmp_mod$p6_2_1)>= 1 | as.integer(tmp_mod$p6_2_2) >= 1, ifelse(as.integer(tmp_mod$p6_2_1)== 0 & as.integer(tmp_mod$p6_2_2) != 0,tmp_mod$p6_2_2, tmp_mod$p6_2_1), 0)
countuni(tmp_mod$dueno_negocio)
countuni(tmp_mod$p6_2_1)
countuni(tmp_mod$p6_2_2)
tmp_mod$p7_2_1 <- reem_multiple(tmp_mod$p7_2_1, c(""), c("0"), tonum=TRUE)
countuni(tmp_mod$p7_2_1)
# No considera a los valores zero
tmp_mod$p7_2_1 <- reem_med(tmp_mod$p7_2_1, c(8,9) )
countuni(tmp_mod$p7_2_1)
countuni(tmp_mod$p7_2_2)
tmp_mod$p7_2_2 <- reem_multiple(tmp_mod$p7_2_2, c(""), c("0"), tonum=TRUE)
tmp_mod$p7_2_2 <- reem_med(tmp_mod$p7_2_2, c(8))
countuni(tmp_mod$p8_9_1)
tmp_mod$p8_9_1 <- reem_multiple(tmp_mod$p8_9_1, c(""),c("0"), tonum=TRUE)
tmp_mod$p8_9_1 <- reem_med(tmp_mod$p8_9_1, c(8,9))
countuni(tmp_mod$p8_9_1)
tmp_mod$p8_9_2 <- reem_multiple(tmp_mod$p8_9_2, c(""),c("0"), tonum=TRUE)
tmp_mod$p8_9_2 <- reem_med(tmp_mod$p8_9_2, c(8,9))
countuni(tmp_mod$p8_9_2)
selmod <- data.frame(folio = tmp_mod$folio, numautos=tmp_mod$p7_2_1, nummotos=tmp_mod$p7_2_2,
numproperty=tmp_mod$p5_2, businessowner=tmp_mod$dueno_negocio, numdepatar=tmp_mod$p8_9_1,
numcredtar=tmp_mod$p8_9_2)
numcredtar=tmp_mod$p8_9_2)
nrow(selmod)
head(seldem, n=10)
tmp_con <- read.csv(file = "datos/TCONCENTRADORA.csv", header=TRUE, sep=",", colClasses="character")
countuni(tmp_con$CAT_TAMHOG)
head(tmp_con$FOLIO)
head(tmp_con$RAZ_5)
head(tmp_con$RAZ_5,n=20)
countuni(tmp_con$SIN_DEUDA)
countuni(tmp_con$CINGXINVRS)
countuni(tmp_con$CAT_TAMHOG)
countuni(tmp_con$CAT_TNCIA)
countuni(tmp_con$CAT_ESCOL)
countuni(tmp_con$CACVO_FIN)
countuni(tmp_con$CAT_ESCOL)
str(tmp_con$CAT_ESCOL)
tmp_con$CAT_ESCOL <- as.numeric(tmp_con$CAT_ESCOL)
str(tmp_con$CAT_ESCOL)
tmp_con1 <- dummy(tmp_con, tmp_con$CAT_ESCOL, c(0,1,2,3,4,9), c("NoED","EDBasic","EDMedia","EdLic","EDPost","EDNoesp"))
head(tmp_con1)
tmp_con <- dummy(tmp_con, tmp_con$CAT_ESCOL, c(0,1,2,3,4,9), c("NoED","EDBasic","EDMedia","EdLic","EDPost","EDNoesp"))
tmp_con$CAT_TNCIA<-as.numeric(tmp_con$CAT_TNCIA)
tmp_con$CAT_TNCIA
tmp_con1 <- dummy(tmp_con, tmp_con$CAT_TNCIA, c(0,1,2,3,4), c("NoTienHogar","VivPagada","VivPagan","VivRent","VivOther"))
tmp_con <- dummy(tmp_con, tmp_con$CAT_TNCIA, c(0,1,2,3,4), c("NoTienHogar","VivPagada","VivPagan","VivRent","VivOther"))
countuni(tmp_con$CAT_POS)
tmp_con$CAT_POS<-as.numeric(tmp_con$CAT_TNCIA)
tmp_con <- dummy(tmp_con, tmp_con$CAT_POS, c(0,1,2,3,4,5), c("NoOcup","Empleado","Jornalero","Patrón","Emprendedor","FamWorker"))
countuni(tmp_con$CAT_OCUP)
head(tmp_con, n=12)
selviv <- data.frame(folio = tmp_con$FOLIO
,NumPersHog=tmp_con$CAT_TAMHOG
,NoED=tmp_con$oED, EDBasic=tmp_con$EDBasic, EDMedia=tmp_con$EDMedia, EDLic=tmp_con$EdLic,EDPost=tmp_con$EDPost ,EDNoesp=tmp_con$EDNoesp
,NoTienViv=tmp_con$NoTienHogar, VivPagada=tmp_con$VivPagada, VivPagan=tmp_con$VivPagan, VivRent=tmp_con$VivRent,VivOther=tmp_con$VivOther
,NoOcup=tmp_con$NoOcup ,Empleado=tmp_con$Empleado ,Jornalero=tmp_con$Jornalero ,Patron=tmp_con$Patrón ,Emprend=tmp_con$Emprendedor, FamWorker=tmp_con$FamWorker
,MontCuentNomi=tmp_con$V_NOMPEN, MontCuentAhorro=tmp_con$V_CTACHQS
,TienActivFin=tmp_con$CACVO_FIN, MontCuentGob=tmp_con$V_CTAGOB
,MontCuentInv=tmp_con$V_PRVINVR, MontCuentAfore=tmp_con$V_AFORE
,MontCuentAhorroInf=tmp_con$V_OTROAF, TienActivNoFin=tmp_con$CACVO_NOFN
,ValVentActivNoFin=tmp_con$VAL_NOFIN, ValVentViv=tmp_con$VAL_VPAL
,ValVentBienProd=tmp_con$VAL_BPROD, ValVentVehic=tmp_con$VAL_VEHIC
,IngresoTotal=tmp_con$ING_TOTAL, RiquezaNeta=tmp_con$RIQ_NET
,MontDeudCredViv=tmp_con$MNTO_VPAL, MontDeudCredNoHip=tmp_con$MTO_NOHIPO
,MontDeudCredBanc_Depar=tmp_con$MTO_TCRD, MontDeudCredNom=tmp_con$MTO_NMPE
,MontDeudCredAutos=tmp_con$MTO_AUMO, inversiones=tmp_con$CINGXINVRS
,MontDeudCred=tmp_con$MTO_REST, MontDeudCred=tmp_con$MTO_CTOT
,NoAdeudos=tmp_con$SIN_DEUDA, RazDeudVivi = tmp_con$RAZ_5)
selviv <- data.frame(folio = tmp_con$FOLIO
,NumPersHog=tmp_con$CAT_TAMHOG
,NoED=tmp_con$NoED, EDBasic=tmp_con$EDBasic, EDMedia=tmp_con$EDMedia, EDLic=tmp_con$EdLic,EDPost=tmp_con$EDPost ,EDNoesp=tmp_con$EDNoesp
,NoTienViv=tmp_con$NoTienHogar, VivPagada=tmp_con$VivPagada, VivPagan=tmp_con$VivPagan, VivRent=tmp_con$VivRent,VivOther=tmp_con$VivOther
,NoOcup=tmp_con$NoOcup ,Empleado=tmp_con$Empleado ,Jornalero=tmp_con$Jornalero ,Patron=tmp_con$Patrón ,Emprend=tmp_con$Emprendedor, FamWorker=tmp_con$FamWorker
,MontCuentNomi=tmp_con$V_NOMPEN, MontCuentAhorro=tmp_con$V_CTACHQS
,TienActivFin=tmp_con$CACVO_FIN, MontCuentGob=tmp_con$V_CTAGOB
,MontCuentInv=tmp_con$V_PRVINVR, MontCuentAfore=tmp_con$V_AFORE
,MontCuentAhorroInf=tmp_con$V_OTROAF, TienActivNoFin=tmp_con$CACVO_NOFN
,ValVentActivNoFin=tmp_con$VAL_NOFIN, ValVentViv=tmp_con$VAL_VPAL
,ValVentBienProd=tmp_con$VAL_BPROD, ValVentVehic=tmp_con$VAL_VEHIC
,IngresoTotal=tmp_con$ING_TOTAL, RiquezaNeta=tmp_con$RIQ_NET
,MontDeudCredViv=tmp_con$MNTO_VPAL, MontDeudCredNoHip=tmp_con$MTO_NOHIPO
,MontDeudCredBanc_Depar=tmp_con$MTO_TCRD, MontDeudCredNom=tmp_con$MTO_NMPE
,MontDeudCredAutos=tmp_con$MTO_AUMO, inversiones=tmp_con$CINGXINVRS
,MontDeudCred=tmp_con$MTO_REST, MontDeudCred=tmp_con$MTO_CTOT
,NoAdeudos=tmp_con$SIN_DEUDA, RazDeudVivi = tmp_con$RAZ_5)
head(selviv)
selcon <- data.frame(folio = tmp_con$FOLIO
,NumPersHog=tmp_con$CAT_TAMHOG
,NoED=tmp_con$NoED, EDBasic=tmp_con$EDBasic, EDMedia=tmp_con$EDMedia, EDLic=tmp_con$EdLic,EDPost=tmp_con$EDPost ,EDNoesp=tmp_con$EDNoesp
,NoTienViv=tmp_con$NoTienHogar, VivPagada=tmp_con$VivPagada, VivPagan=tmp_con$VivPagan, VivRent=tmp_con$VivRent,VivOther=tmp_con$VivOther
,NoOcup=tmp_con$NoOcup ,Empleado=tmp_con$Empleado ,Jornalero=tmp_con$Jornalero ,Patron=tmp_con$Patrón ,Emprend=tmp_con$Emprendedor, FamWorker=tmp_con$FamWorker
,MontCuentNomi=tmp_con$V_NOMPEN, MontCuentAhorro=tmp_con$V_CTACHQS
,TienActivFin=tmp_con$CACVO_FIN, MontCuentGob=tmp_con$V_CTAGOB
,MontCuentInv=tmp_con$V_PRVINVR, MontCuentAfore=tmp_con$V_AFORE
,MontCuentAhorroInf=tmp_con$V_OTROAF, TienActivNoFin=tmp_con$CACVO_NOFN
,ValVentActivNoFin=tmp_con$VAL_NOFIN, ValVentViv=tmp_con$VAL_VPAL
,ValVentBienProd=tmp_con$VAL_BPROD, ValVentVehic=tmp_con$VAL_VEHIC
,IngresoTotal=tmp_con$ING_TOTAL, RiquezaNeta=tmp_con$RIQ_NET
,MontDeudCredViv=tmp_con$MNTO_VPAL, MontDeudCredNoHip=tmp_con$MTO_NOHIPO
,MontDeudCredBanc_Depar=tmp_con$MTO_TCRD, MontDeudCredNom=tmp_con$MTO_NMPE
,MontDeudCredAutos=tmp_con$MTO_AUMO, inversiones=tmp_con$CINGXINVRS
,MontDeudCred=tmp_con$MTO_REST, MontDeudCred=tmp_con$MTO_CTOT
,NoAdeudos=tmp_con$SIN_DEUDA, RazDeudVivi = tmp_con$RAZ_5)
head(selcon)
selviv <- data.frame(folio = tmp_viv$folio, numDormi=tmp_viv$p3_1, numRoom = tmp_viv$p3_2,
numbano=tmp_viv$p3_4, mtcuad = tmp_viv$p3_8_1, rentaviv = tmp_viv$p4_6 )
head(selviv, n=10)
#--------------------#--------------------#--------------------#--------------------#--------------------
nrow(selmod)
nroww(seldem)
nrow(selviv)
seldem <- data.frame(folio = tmp_dem$folio, Hombre=tmp_dem$Hombre,Mujer=tmp_dem$Mujer , edad= tmp_dem$edad,
UnionL=tmp_dem$UnionL, Separado =tmp_dem$Separado, Divorci =tmp_dem$Divorci,Viudo=tmp_dem$Viudo,
Casado=tmp_dem$Casado, Soltero=tmp_dem$Soltero, NoSabe=tmp_dem$NoSabe)
head(seldem, n=10)
nrow(selmod)
nroww(seldem)
nrow(selviv)
nrow(selmod)
nrow(seldem)
nrow(selviv)
countuni(tmp_mod$p7_2_2)
nrow(selmod)
nrow(seldem)
nrow(selviv)
nrow(selcon)
merged_data1 <- merge(selcon, selmod, by = "folio",all.x = TRUE)
na_counts <- colSums(is.na(merged_data1))
na_counts
#--------------------#--------------------#--------------------#--------------------#--------------------
selcon <- data.frame(folio = tmp_con$FOLIO
,NumPersHog=tmp_con$CAT_TAMHOG
,NoED=tmp_con$NoED, EDBasic=tmp_con$EDBasic, EDMedia=tmp_con$EDMedia, EDLic=tmp_con$EdLic,EDPost=tmp_con$EDPost ,EDNoesp=tmp_con$EDNoesp
,NoTienViv=tmp_con$NoTienHogar, VivPagada=tmp_con$VivPagada, VivPagan=tmp_con$VivPagan, VivRent=tmp_con$VivRent,VivOther=tmp_con$VivOther
,NoOcup=tmp_con$NoOcup ,Empleado=tmp_con$Empleado ,Jornalero=tmp_con$Jornalero ,Patron=tmp_con$Patrón ,Emprend=tmp_con$Emprendedor, FamWorker=tmp_con$FamWorker
,MontCuentNomi=tmp_con$V_NOMPEN, MontCuentAhorro=tmp_con$V_CTACHQS
,TienActivFin=tmp_con$CACVO_FIN, MontCuentGob=tmp_con$V_CTAGOB
,MontCuentInv=tmp_con$V_PRVINVR, MontCuentAfore=tmp_con$V_AFORE
,MontCuentAhorroInf=tmp_con$V_OTROAF, TienActivNoFin=tmp_con$CACVO_NOFN
,ValVentActivNoFin=tmp_con$VAL_NOFIN, ValVentViv=tmp_con$VAL_VPAL
,ValVentBienProd=tmp_con$VAL_BPROD, ValVentVehic=tmp_con$VAL_VEHIC
,IngresoTotal=tmp_con$ING_TOTAL, RiquezaNeta=tmp_con$RIQ_NET
,MontDeudCredViv=tmp_con$MNTO_VPAL, MontDeudCredNoHip=tmp_con$MTO_NOHIPO
,MontDeudCredBanc_Depar=tmp_con$MTO_TCRD, MontDeudCredNom=tmp_con$MTO_NMPE
,MontDeudCredAutos=tmp_con$MTO_AUMO, inversiones=tmp_con$CINGXINVRS
,MontDeudOtrCred=tmp_con$MTO_REST
,NoAdeudos=tmp_con$SIN_DEUDA, RazDeudVivi = tmp_con$RAZ_5)
head(selcon)
merged_data1 <- merge(selcon, selmod, by = "folio",all.x = TRUE)
na_counts <- colSums(is.na(merged_data1))
na_counts
nrow(selmod)
nrow(seldem)
nrow(selviv)
nrow(selcon)
me1 <- merge(selcon, selmod, by = "folio",all.x = TRUE)
me2 <- merge(me1, seldem, by = "folio",all.x = TRUE)
me <- merge(me2, seldviv, by = "folio",all.x = TRUE)
na_counts <- colSums(is.na(me))
na_counts
me1 <- merge(selcon, selmod, by = "folio",all.x = TRUE)
me2 <- merge(me1, seldem, by = "folio",all.x = TRUE)
me <- merge(me2, selviv, by = "folio",all.x = TRUE)
na_counts <- colSums(is.na(me))
na_counts
nrow(me)
complete_rows <- complete.cases(me)
# Subset the data frame to keep only complete rows
df_cleaned <- df[complete_rows, ]
nrow(df_cleaned)
df_cleaned <- me[complete_rows, ]
nrow(df_cleaned)
na_counts <- colSums(is.na(df_cleaned))
na_counts
me <- na_counts
head(me, n=20)
head(df_cleaned, n=20)
write.csv(df_cleaned, file = "ML_Dataset.csv", row.names = FALSE)
