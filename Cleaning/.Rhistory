tmp_hogar1$v_nompen <- tmp_hogar1$v_ahnompe
tmp_hogar1$c_afore <- tmp_hogar1$c_ahafore
tmp_hogar1$v_afore <- tmp_hogar1$v_ahafore
tmp_hogar1$c_ctagob <- tmp_hogar1$c_ahctago
tmp_hogar1$v_ctagob <- tmp_hogar1$v_ahctago
tmp_hogar1$c_segvid <- tmp_hogar1$c_ahsegvi
tmp_hogar1$v_segvid <- tmp_hogar1$v_ahsegvi
tmp_hogar1$c_prvinvr <- ifelse(ifelse(is.na(tmp_hogar1$c_ahprv ), 0, tmp_hogar1$c_ahprv) +
ifelse(is.na(tmp_hogar1$c_ahinvrs), 0, tmp_hogar1$c_ahinvrs) >= 1, 1, 0)
tmp_hogar1$v_prvinvr <- ifelse(is.na(tmp_hogar1$v_ahprv ), 0, tmp_hogar1$v_ahprv ) +
ifelse(is.na(tmp_hogar1$v_ahinvrs), 0, tmp_hogar1$v_ahinvrs)
tmp_hogar1$c_otroaf <- ifelse(ifelse(is.na(tmp_hogar1$c_ahcaja ), 0, tmp_hogar1$c_ahcaja) +
ifelse(is.na(tmp_hogar1$c_ahfami ), 0, tmp_hogar1$c_ahfami) +
ifelse(is.na(tmp_hogar1$c_ahtanda), 0, tmp_hogar1$c_ahtanda) +
ifelse(is.na(tmp_hogar1$c_ahprest), 0, tmp_hogar1$c_ahprest) +
ifelse(is.na(tmp_hogar1$c_ahotro1), 0, tmp_hogar1$c_ahotro1) +
ifelse(is.na(tmp_hogar1$c_ahotro2), 0, tmp_hogar1$c_ahotro2) > 0, 1, 0)
tmp_hogar1$v_otroaf <- ifelse(is.na(tmp_hogar1$v_ahcaja ), 0, tmp_hogar1$v_ahcaja ) +
ifelse(is.na(tmp_hogar1$v_ahfami ), 0, tmp_hogar1$v_ahfami ) +
ifelse(is.na(tmp_hogar1$v_ahtanda), 0, tmp_hogar1$v_ahtanda) +
ifelse(is.na(tmp_hogar1$v_ahprest), 0, tmp_hogar1$v_ahprest) +
ifelse(is.na(tmp_hogar1$v_ahotro1), 0, tmp_hogar1$v_ahotro1) +
ifelse(is.na(tmp_hogar1$v_ahotro2), 0, tmp_hogar1$v_ahotro2)
# ***Obtengo hogares con activo Financiero y su valor
tmp_hogar1$cacvo_fin <- ifelse(ifelse(is.na(tmp_hogar1$c_ctachqs), 0, tmp_hogar1$c_ctachqs) +
ifelse(is.na(tmp_hogar1$c_afore ), 0, tmp_hogar1$c_afore ) +
ifelse(is.na(tmp_hogar1$c_nompen ), 0, tmp_hogar1$c_nompen ) +
ifelse(is.na(tmp_hogar1$c_ctagob ), 0, tmp_hogar1$c_ctagob ) +
ifelse(is.na(tmp_hogar1$c_segvid ), 0, tmp_hogar1$c_segvid ) +
ifelse(is.na(tmp_hogar1$c_prvinvr), 0, tmp_hogar1$c_prvinvr) +
ifelse(is.na(tmp_hogar1$c_otroaf ), 0, tmp_hogar1$c_otroaf ) > 0, 1, tmp_hogar1$cacvo_fin)
tmp_hogar1$val_finan <- ifelse(is.na(tmp_hogar1$v_ctachqs), 0, tmp_hogar1$v_ctachqs) +
ifelse(is.na(tmp_hogar1$v_nompen ), 0, tmp_hogar1$v_nompen ) +
ifelse(is.na(tmp_hogar1$v_afore ), 0, tmp_hogar1$v_afore ) +
ifelse(is.na(tmp_hogar1$v_ctagob ), 0, tmp_hogar1$v_ctagob ) +
ifelse(is.na(tmp_hogar1$v_segvid ), 0, tmp_hogar1$v_segvid ) +
ifelse(is.na(tmp_hogar1$v_prvinvr), 0, tmp_hogar1$v_prvinvr) +
ifelse(is.na(tmp_hogar1$v_otroaf ), 0, tmp_hogar1$v_otroaf )
tmp_hogar1$aux1 <- tmp_hogar1$fac_hog * tmp_hogar1$cacvo_fin
tmp_hogar1$aux2 <- tmp_hogar1$fac_hog * tmp_hogar1$val_finan
gpo1 <- sum(aggregate(tmp_hogar1[,c("aux1")],by = list(tmp_hogar1$LlaveHO), FUN = sum, na.rm=TRUE)$x) # obtener on df agrupado por hogar
gpo2 <- sum(aggregate(tmp_hogar1[,c("aux2")],by = list(tmp_hogar1$LlaveHO), FUN = sum, na.rm=TRUE)$x)/1000000 # obtener on df agrupado por hogar
nofinan <- rbind(nofinan, c(1, "+Activos Financieros", gpo1, gpo2))
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("aux1","aux2") ] # Eliminar columnas
# **************************************************************************************
# *****************FIN DE SECCION DE ACTIVOS FINANCIEROS
# **************************************************************************************
# *****************INICIO DE SECCION DE DEUDAS
# **************************************************************************************
# ****Tablas auxiliares para Limpieza y transformacion de
tmp_deuda_vpal <- read.csv(file = "datos/TVivienda.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_vpal <- conversor(tmp_deuda_vpal)
tmp_deuda_vpal$LlaveVI <- paste(tmp_deuda_vpal$upm, tmp_deuda_vpal$viv_sel, sep="")
# Eliminar columnas innecesarias
tmp_deuda_vpal <- tmp_deuda_vpal[, names(tmp_deuda_vpal) %in% c("LlaveVI", "p4_17", "p4_33", "p4_40", "p4_42") ] # Eliminar columnas
tmp_deuda_vpal <- tmp_deuda_vpal[(tmp_deuda_vpal$p4_17 == "1" | tmp_deuda_vpal$p4_40 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_deuda_vpal <- tmp_deuda_vpal[order(tmp_deuda_vpal$LlaveVI), ]
tmp_deuda_vsec <- read.csv(file = "datos/TPropiedad.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_vsec <- conversor(tmp_deuda_vsec)
tmp_deuda_vsec$LlaveVI <- paste(tmp_deuda_vsec$upm, tmp_deuda_vsec$viv_sel, sep="")
tmp_deuda_vsec$LlaveHO <- paste(tmp_deuda_vsec$upm, tmp_deuda_vsec$viv_sel,tmp_deuda_vsec$hogar, sep="")
# Eliminar columnas innecesarias
tmp_deuda_vsec <- tmp_deuda_vsec[, names(tmp_deuda_vsec) %in% c("LlaveVI", "LlaveHO", "p5_12", "p5_16") ] # Eliminar columnas
tmp_deuda_vsec <- tmp_deuda_vsec[(tmp_deuda_vsec$p5_12 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_deuda_vsec <- tmp_deuda_vsec[order(tmp_deuda_vsec$LlaveHO), ]
tmp_deuda_t__deptal <- read.csv(file = "datos/TDepar.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_t__deptal <- conversor(tmp_deuda_t__deptal)
tmp_deuda_t__deptal$LlaveVI <- paste(tmp_deuda_t__deptal$upm, tmp_deuda_t__deptal$viv_sel, sep="")
tmp_deuda_t__deptal$LlaveHO <- paste(tmp_deuda_t__deptal$upm, tmp_deuda_t__deptal$viv_sel, tmp_deuda_t__deptal$hogar, sep="")
# Eliminar columnas innecesarias
tmp_deuda_t__deptal <- tmp_deuda_t__deptal[, names(tmp_deuda_t__deptal) %in% c("LlaveVI", "LlaveHO", "p8_15") ] # Eliminar columnas
tmp_deuda_t__deptal <- tmp_deuda_t__deptal[order(tmp_deuda_t__deptal$LlaveHO), ]
tmp_deuda_t_bnco <- read.csv(file = "datos/TBanca.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_t_bnco <- conversor(tmp_deuda_t_bnco)
tmp_deuda_t_bnco$LlaveVI <- paste(tmp_deuda_t_bnco$upm, tmp_deuda_t_bnco$viv_sel, sep="")
tmp_deuda_t_bnco$LlaveHO <- paste(tmp_deuda_t_bnco$upm, tmp_deuda_t_bnco$viv_sel, tmp_deuda_t_bnco$hogar, sep="")
# Eliminar columnas innecesarias
tmp_deuda_t_bnco <- tmp_deuda_t_bnco[, names(tmp_deuda_t_bnco) %in% c("LlaveVI", "LlaveHO", "p8_21") ] # Eliminar columnas
tmp_deuda_t_bnco <- tmp_deuda_t_bnco[order(tmp_deuda_t_bnco$LlaveHO), ]
# ************* credito de vehiculos
# Auto y Moto
tmp_automoto <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
tmp_automoto <- conversor(tmp_automoto)
tmp_automoto$LlaveVI <- paste(tmp_automoto$upm, tmp_automoto$viv_sel, sep="")
tmp_automoto$LlaveHO <- paste(tmp_automoto$upm, tmp_automoto$viv_sel, tmp_automoto$hogar, sep="")
tmp_automoto <- tmp_automoto[(tmp_automoto$p7_4_1 == "1" |
tmp_automoto$p7_4_2 == "1" |
ifelse(gsub(" ", "", tmp_automoto$p7_5_1) == "", 0, as.integer(tmp_automoto$p7_5_1)) > 0 |
ifelse(gsub(" ", "", tmp_automoto$p7_5_2) == "", 0, as.integer(tmp_automoto$p7_5_2)) > 0), ] # eliminar registros que no cumplan con la condición
tmp_automoto$factor <- as.integer(tmp_automoto$factor)
tmp_automoto <- aggregate(tmp_automoto[,c("factor")],by = list(tmp_automoto$LlaveHO), FUN = sum, na.rm=TRUE)
colnames(tmp_automoto)[colnames(tmp_automoto) == "Group.1"] <- "LlaveHO"
colnames(tmp_automoto)[colnames(tmp_automoto) == "x" ] <- "factor"
gpo1 <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
gpo1 <- conversor(gpo1)
gpo1$LlaveHO <- paste(gpo1$upm, gpo1$viv_sel, gpo1$hogar, sep="")
gpo1$uni <- 1
gpo1 <- gpo1[gpo1$p7_4_1 == "1", ]
gpo1 <- aggregate(gpo1[,c("uni")],by = list(gpo1$LlaveHO), FUN = sum, na.rm=TRUE)
colnames(gpo1)[colnames(gpo1) == "Group.1"] <- "LlaveHO"
gpo1$p7_4_1 <- 1
gpo2 <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
gpo2 <- conversor(gpo2)
gpo2$LlaveHO <- paste(gpo2$upm, gpo2$viv_sel, gpo2$hogar, sep="")
gpo2$uni <- 1
gpo2 <- gpo2[gpo2$p7_4_2 == "1", ]
gpo2 <- aggregate(gpo2[,c("uni")],by = list(gpo2$LlaveHO), FUN = sum, na.rm=TRUE)
colnames(gpo2)[colnames(gpo2) == "Group.1"] <- "LlaveHO"
gpo2$p7_4_2 <- 1
tmp_automoto <- merge(tmp_automoto, gpo1, by = "LlaveHO", all.x = T)
tmp_automoto <- merge(tmp_automoto, gpo2, by = "LlaveHO", all.x = T)
tmp_automoto$p7_4_1 <- ifelse(is.na(tmp_automoto$p7_4_1), 0, 1)
tmp_automoto$p7_4_2 <- ifelse(is.na(tmp_automoto$p7_4_2), 0, 1)
tmp_automoto$p7_12 <- 0
tmp_automoto$p7_21 <- 0
# Eliminar columnas innecesarias
tmp_automoto <- tmp_automoto[, names(tmp_automoto) %in% c("LlaveVI", "LlaveHO", "factor", "p7_4_1", "p7_4_2", "p7_12", "p7_21") ] # Eliminar columnas
#Solo Auto
tmp_auto <- read.csv(file = "datos/TAuto.csv", header=TRUE, sep=",", colClasses="character")
tmp_auto <- conversor(tmp_auto)
tmp_auto$LlaveHO <- paste(tmp_auto$upm, tmp_auto$viv_sel, tmp_auto$hogar, sep="")
tmp_auto$p7_12 <- as.integer(tmp_auto$p7_12)
tmp_auto <- tmp_auto[(tmp_auto$p7_12 >= 1 & tmp_auto$p7_12 <= 9999887), ] # eliminar registros que no cumplan con la condición
tmp_auto <- aggregate(tmp_auto[,c("p7_12")], by=list("LlaveHO"=tmp_auto$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
#Solo Moto
tmp_moto <- read.csv(file = "datos/TMoto.csv", header=TRUE, sep=",", colClasses="character")
tmp_moto <- conversor(tmp_moto)
tmp_moto$LlaveHO <- paste(tmp_moto$upm, tmp_moto$viv_sel, tmp_moto$hogar, sep="")
tmp_moto$p7_21 <- as.integer(tmp_moto$p7_21)
tmp_moto <- tmp_moto[(tmp_moto$p7_21 >= 1 & tmp_moto$p7_21 <= 9999887), ] # eliminar registros que no cumplan con la condición
tmp_moto <- aggregate(tmp_moto[,c("p7_21")], by = list("LlaveHO"=tmp_moto$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
tmp_automoto <- merge(tmp_automoto, tmp_auto, by="LlaveHO", all.x = T)
tmp_automoto <- merge(tmp_automoto, tmp_moto, by="LlaveHO", all.x = T)
tmp_automoto$p7_12 <- ifelse(is.na(tmp_automoto$x.x), 0, tmp_automoto$x.x)
tmp_automoto$p7_21 <- ifelse(is.na(tmp_automoto$x.y), 0, tmp_automoto$x.y)
tmp_automoto <- tmp_automoto[, !names(tmp_automoto) %in% c("x.x","x.y")]
# *****credito nomina/personal
tmp_deuda_nomper <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_nomper <- conversor(tmp_deuda_nomper)
tmp_deuda_nomper$LlaveHO <- paste(tmp_deuda_nomper$upm, tmp_deuda_nomper$viv_sel, tmp_deuda_nomper$hogar, sep="")
tmp_deuda_nomper <- tmp_deuda_nomper[(ifelse(gsub(" ", "", tmp_deuda_nomper$p8_9_3) == "", 0, as.integer(tmp_deuda_nomper$p8_9_3)) > 0 |
ifelse(gsub(" ", "", tmp_deuda_nomper$p8_9_5) == "", 0, as.integer(tmp_deuda_nomper$p8_9_5)) > 0), ] # eliminar registros que no cumplan con la condición
tmp_deuda_nomper$factor <- as.integer(tmp_deuda_nomper$factor)
tmp_deuda_nomper <- aggregate(tmp_deuda_nomper[,c("factor")], by = list("LlaveHO"=tmp_deuda_nomper$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_deuda_nomper)[colnames(tmp_deuda_nomper) == "x"] <- "factor"
tmp_deuda_nomper$p8_25 <- 0
tmp_deuda_nomper$p8_41 <- 0
tmp_deuda_nomina <- read.csv(file = "datos/TNomina.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_nomina <- conversor(tmp_deuda_nomina)
tmp_deuda_nomina$LlaveHO <- paste(tmp_deuda_nomina$upm, tmp_deuda_nomina$viv_sel, tmp_deuda_nomina$hogar, sep="")
tmp_deuda_nomina <- tmp_deuda_nomina[(ifelse(gsub(" ", "", tmp_deuda_nomina$p8_25) == "", 0, as.integer(tmp_deuda_nomina$p8_25)) >= 1 &
ifelse(gsub(" ", "", tmp_deuda_nomina$p8_25) == "", 0, as.integer(tmp_deuda_nomina$p8_25)) <= 999887), ]
tmp_deuda_nomina$p8_25 <- as.integer(tmp_deuda_nomina$p8_25)
tmp_deuda_nomina <- aggregate(tmp_deuda_nomina[,c("p8_25")], by = list("LlaveHO"=tmp_deuda_nomina$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_deuda_nomina)[colnames(tmp_deuda_nomina) == "x"] <- "p8_25"
tmp_deuda_personal <- read.csv(file = "datos/TPersonal.csv", header=TRUE, sep=",", colClasses="character")
tmp_deuda_personal  <- conversor(tmp_deuda_personal)
tmp_deuda_personal$LlaveHO <- paste(tmp_deuda_personal$upm, tmp_deuda_personal$viv_sel, tmp_deuda_personal$hogar, sep="")
tmp_deuda_personal <- tmp_deuda_personal[(ifelse(gsub(" ", "", tmp_deuda_personal$p8_41) == "", 0, as.integer(tmp_deuda_personal$p8_41)) >= 1 &
ifelse(gsub(" ", "", tmp_deuda_personal$p8_41) == "", 0, as.integer(tmp_deuda_personal$p8_41)) <= 999887), ]
tmp_deuda_personal$p8_41 <- as.integer(tmp_deuda_personal$p8_41)
tmp_deuda_personal <- aggregate(tmp_deuda_personal[,c("p8_41")], by = list("LlaveHO"=tmp_deuda_personal$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_deuda_personal)[colnames(tmp_deuda_personal) == "x"] <- "p8_41"
tmp_deuda_nomper <- merge(tmp_deuda_nomper, tmp_deuda_nomina , by="LlaveHO", all.x = T)
tmp_deuda_nomper <- merge(tmp_deuda_nomper, tmp_deuda_personal, by="LlaveHO", all.x = T)
tmp_deuda_nomper$p8_25.x <- ifelse(is.na(tmp_deuda_nomper$p8_25.y), 0, tmp_deuda_nomper$p8_25.y)
tmp_deuda_nomper$p8_41.x <- ifelse(is.na(tmp_deuda_nomper$p8_41.y), 0, tmp_deuda_nomper$p8_41.y)
colnames(tmp_deuda_nomper)[colnames(tmp_deuda_nomper) == "p8_25.x"] <- "p8_25"
colnames(tmp_deuda_nomper)[colnames(tmp_deuda_nomper) == "p8_41.x"] <- "p8_41"
tmp_deuda_nomper <- tmp_deuda_nomper[, !names(tmp_deuda_nomper) %in% c("p8_25.y","p8_41.y")]
# *****credito grupal
tmp_grupal <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
tmp_grupal <- conversor(tmp_grupal)
tmp_grupal <- tmp_grupal[( tmp_grupal$p8_8_6 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_grupal$LlaveHO <- paste(tmp_grupal$upm, tmp_grupal$viv_sel, tmp_grupal$hogar, sep="")
tmp_grupal$factor <- as.integer(tmp_grupal$factor)
tmp_grupal <- aggregate(tmp_grupal[,c("factor")], by = list("LlaveHO"=tmp_grupal$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_grupal)[colnames(tmp_grupal) == "x"] <- "factor"
tmp_grupal$p8_8_6 <- 1
tmp_grupal$p8_49 <- 0
aux_grupal <- read.csv(file = "datos/TGrupal.csv", header=TRUE, sep=",", colClasses="character")
aux_grupal <- conversor(aux_grupal)
aux_grupal$p8_49 <- as.integer(aux_grupal$p8_49)
aux_grupal <- aux_grupal[( aux_grupal$p8_49 >= 1 & aux_grupal$p8_49 <= 999887 ), ] # eliminar registros que no cumplan con la condición
aux_grupal$LlaveHO <- paste(aux_grupal$upm, aux_grupal$viv_sel, aux_grupal$hogar, sep="")
aux_grupal <- aggregate(aux_grupal[,c("p8_49")], by = list("LlaveHO"=aux_grupal$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(aux_grupal)[colnames(aux_grupal) == "x"] <- "p8_49"
tmp_grupal <- merge(tmp_grupal, aux_grupal, by = "LlaveHO", all.x = T)
tmp_grupal$p8_49.x <- ifelse(is.na(tmp_grupal$p8_49.y), 0, tmp_grupal$p8_49.y)
colnames(tmp_grupal)[colnames(tmp_grupal) == "p8_49.x"] <- "p8_49"
tmp_grupal <- tmp_grupal[, !names(tmp_grupal) %in% c("p8_49.y")]
# *****credito edicativo
tmp_educativo <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
tmp_educativo <- conversor(tmp_educativo)
tmp_educativo <- tmp_educativo[( tmp_educativo$p8_9_4 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_educativo$LlaveHO <- paste(tmp_educativo$upm, tmp_educativo$viv_sel, tmp_educativo$hogar, sep="")
tmp_educativo$factor <- as.integer(tmp_educativo$factor)
tmp_educativo <- aggregate(tmp_educativo[,c("factor")], by = list("LlaveHO"=tmp_educativo$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_educativo)[colnames(tmp_educativo) == "x"] <- "factor"
tmp_educativo$p8_9_4 <- 1
tmp_educativo$p8_34 <- 0
aux_educativo <- read.csv(file = "datos/TEduca.csv", header=TRUE, sep=",", colClasses="character")
aux_educativo <- conversor(aux_educativo)
aux_educativo <- conversor(aux_educativo)
aux_educativo$p8_34 <- as.integer(aux_educativo$p8_34)
aux_educativo <- aux_educativo[( aux_educativo$p8_34 >= 1 & aux_educativo$p8_34 <= 999887 ), ] # eliminar registros que no cumplan con la condición
aux_educativo$LlaveHO <- paste(aux_educativo$upm, aux_educativo$viv_sel, aux_educativo$hogar, sep="")
aux_educativo <- aggregate(aux_educativo[,c("p8_34")], by = list("LlaveHO"=aux_educativo$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(aux_educativo)[colnames(aux_educativo) == "x"] <- "p8_34"
tmp_educativo <- merge(tmp_educativo, aux_educativo, by = "LlaveHO", all.x = T)
tmp_educativo$p8_34.x <- ifelse(is.na(tmp_educativo$p8_34.y), 0, tmp_educativo$p8_34.y)
colnames(tmp_educativo)[colnames(tmp_educativo) == "p8_34.x"] <- "p8_34"
tmp_educativo <- tmp_educativo[, !names(tmp_educativo) %in% c("p8_34.y")]
# *****credito Bienes productivos
tmp_cred_agricola <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
tmp_cred_agricola <- conversor(tmp_cred_agricola)
tmp_cred_agricola <- tmp_cred_agricola[( tmp_cred_agricola$p6_25 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_cred_agricola$LlaveHO <- paste(tmp_cred_agricola$upm, tmp_cred_agricola$viv_sel, tmp_cred_agricola$hogar, sep="")
tmp_cred_agricola$p6_27 <- as.integer(tmp_cred_agricola$p6_27)
tmp_cred_agricola <- aggregate(tmp_cred_agricola[,c("p6_27")], by = list("LlaveHO"=tmp_cred_agricola$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_cred_agricola)[colnames(tmp_cred_agricola) == "x"] <- "p6_27"
tmp_cred_agricola$p6_25 <- 1
# ******Credito Negocio
tmp_cred_neg <- read.csv(file = "datos/TUnico.csv", header=TRUE, sep=",", colClasses="character")
tmp_cred_neg <- conversor(tmp_cred_neg)
tmp_cred_neg <- tmp_cred_neg[( tmp_cred_neg$p6_11 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_cred_neg$p6_17 <- ifelse(as.integer(tmp_cred_neg$p6_17) >= 1 & as.integer(tmp_cred_neg$p6_17) <= 9999887, as.integer(tmp_cred_neg$p6_17), 0)
tmp_cred_neg$LlaveHO <- paste(tmp_cred_neg$upm, tmp_cred_neg$viv_sel, tmp_cred_neg$hogar, sep="")
tmp_cred_neg <- aggregate(tmp_cred_neg[,c("p6_17")], by =list("LlaveHO"=tmp_cred_neg$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(tmp_cred_neg)[colnames(tmp_cred_neg) == "x"] <- "p6_17"
tmp_cred_neg$p6_11 <- 1
#********Créditos_informales
tmp_cred_Ot2 <- read.csv(file = "datos/TModulo.csv", header=TRUE, sep=",", colClasses="character")
tmp_cred_Ot2 <- conversor(tmp_cred_Ot2)
tmp_cred_Ot2 <- tmp_cred_Ot2[( tmp_cred_Ot2$p8_1_1 == "1" | tmp_cred_Ot2$p8_1_2 == "1" | tmp_cred_Ot2$p8_1_3 == "1" | tmp_cred_Ot2$p8_1_4 == "1" ), ] # eliminar registros que no cumplan con la condición
tmp_cred_Ot2$LlaveHO <- paste(tmp_cred_Ot2$upm, tmp_cred_Ot2$viv_sel, tmp_cred_Ot2$hogar, sep="")
tmp_cred_Ot2$p8_4_1 <- ifelse(as.integer(tmp_cred_Ot2$p8_4_1) >= 1 & as.integer(tmp_cred_Ot2$p8_4_1) <= 999887, as.integer(tmp_cred_Ot2$p8_4_1), 0)
tmp_cred_Ot2$p8_4_2 <- ifelse(as.integer(tmp_cred_Ot2$p8_4_2) >= 1 & as.integer(tmp_cred_Ot2$p8_4_2) <= 999887, as.integer(tmp_cred_Ot2$p8_4_2), 0)
tmp_cred_Ot2$p8_4_3 <- ifelse(as.integer(tmp_cred_Ot2$p8_4_3) >= 1 & as.integer(tmp_cred_Ot2$p8_4_3) <= 999887, as.integer(tmp_cred_Ot2$p8_4_3), 0)
tmp_cred_Ot2$p8_4_4 <- ifelse(as.integer(tmp_cred_Ot2$p8_4_4) >= 1 & as.integer(tmp_cred_Ot2$p8_4_4) <= 999887, as.integer(tmp_cred_Ot2$p8_4_4), 0)
tmp_cred_Ot2 <- aggregate(tmp_cred_Ot2[,c("p8_4_1", "p8_4_2", "p8_4_3", "p8_4_4")], by = list("LlaveHO"=tmp_cred_Ot2$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
tmp_cred_Ot2$cred_inf <- 1
# ********Créditos_informales Asociados a la vivienda
tmp_cred_Ot1 <- read.csv(file = "datos/TVivienda.csv", header=TRUE, sep=",", colClasses="character")
tmp_cred_Ot1 <- conversor(tmp_cred_Ot1)
tmp_cred_Ot1 <- tmp_cred_Ot1[( tmp_cred_Ot1$p4_43_1 == "1" | tmp_cred_Ot1$p4_43_2 == "1" | tmp_cred_Ot1$p4_43_3 == "1" | tmp_cred_Ot1$p4_43_4 == "1" | tmp_cred_Ot1$p4_51 == "1"), ] # eliminar registros que no cumplan con la condición
tmp_cred_Ot1$LlaveVI <- paste(tmp_cred_Ot1$upm, tmp_cred_Ot1$viv_sel, sep="")
# Eliminar columnas innecesarias
tmp_cred_Ot1 <- tmp_cred_Ot1[, names(tmp_cred_Ot1) %in% c("LlaveVI", "p4_43_1", "p4_46_1", "p4_43_2", "p4_46_2", "p4_43_3", "p4_46_3", "p4_43_4", "p4_46_4", "p4_51", "p4_54") ] # Eliminar columnas
tmp_cred_Ot1$cred_inf_v <- 1
# ********************************************************
# **** Deuda
tmp_deuda_vpal$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_deuda_vpal, by = "LlaveVI", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni), 0, tmp_hogar1$uni)
tmp_hogar1$ccred_vpal <- ifelse(tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, 1, 0)
tmp_hogar1$mnto_vpal <- ifelse(tmp_hogar1$h_ppal != 1 | tmp_hogar1$uni != 1 | tmp_hogar1$p4_33 %in% c("999999888", "999999999"), 0, as.integer(tmp_hogar1$p4_33)) +
ifelse(tmp_hogar1$h_ppal != 1 | tmp_hogar1$uni != 1 | tmp_hogar1$p4_42 %in% c("999999888", "999999999"), 0, as.integer(tmp_hogar1$p4_42))
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni") ] # Eliminar columnas
# *****Vivienda secundaria
aux_deuda_vsec <- tmp_deuda_vsec
aux_deuda_vsec$p5_16 <- as.integer(aux_deuda_vsec$p5_16)
aux_deuda_vsec$p5_16 <- ifelse(aux_deuda_vsec$p5_16 %in% c(99999888, 99999999), 0, aux_deuda_vsec$p5_16)
aux_deuda_vsec <- aggregate(aux_deuda_vsec[,c("p5_16")], by = list("LlaveHO"=aux_deuda_vsec$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
aux_deuda_vsec$ccred_vsec <- 1
colnames(aux_deuda_vsec)[colnames(aux_deuda_vsec) == "x"] <- "mnto_vsec"
tmp_hogar1 <- merge(tmp_hogar1, aux_deuda_vsec, by = "LlaveHO", all.x = T)
tmp_hogar1$ccred_vsec.x <- ifelse(is.na(tmp_hogar1$ccred_vsec.y), 0, 1)
tmp_hogar1$mnto_vsec.x <- ifelse(tmp_hogar1$ccred_vsec.x == 1, tmp_hogar1$mnto_vsec.y, 0)
colnames(tmp_hogar1)[colnames(tmp_hogar1) == "ccred_vsec.x"] <- "ccred_vsec"
colnames(tmp_hogar1)[colnames(tmp_hogar1) == "mnto_vsec.x"] <- "mnto_vsec"
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("mnto_vsec.y","ccred_vsec.y")]
# ***Credito Hipotecario credito de vivienda Principal + credito vivienda secundari
tmp_hogar1$cred_hip = ifelse(tmp_hogar1$ccred_vpal + tmp_hogar1$ccred_vsec > 0, 1, 0)
tmp_hogar1$mto_hipot = tmp_hogar1$mnto_vpal + tmp_hogar1$mnto_vsec
# **********************************************
# ***creditos Tarjeta bacaria y/o departamental
# *** Departamental
aux_deuda_t__deptal <- tmp_deuda_t__deptal
aux_deuda_t__deptal$p8_15 <- as.integer(aux_deuda_t__deptal$p8_15)
aux_deuda_t__deptal$p8_15 <- ifelse(aux_deuda_t__deptal$p8_15 %in% c(999888, 999999), 0, aux_deuda_t__deptal$p8_15)
aux_deuda_t__deptal <- aggregate(aux_deuda_t__deptal[,c("p8_15")], by = list("LlaveHO"=aux_deuda_t__deptal$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(aux_deuda_t__deptal)[colnames(aux_deuda_t__deptal) == "x"] <- "mto_dept"
aux_deuda_t__deptal$c_deptal <- 1
tmp_hogar1 <- merge(tmp_hogar1, aux_deuda_t__deptal, by = "LlaveHO", all.x = T)
tmp_hogar1$cred_tcrd <- ifelse(is.na(tmp_hogar1$c_deptal), 0, 1)
tmp_hogar1$mto_dept <- ifelse(is.na(tmp_hogar1$mto_dept), 0, tmp_hogar1$mto_dept)
tmp_hogar1$mto_tcrd <- ifelse(tmp_hogar1$cred_tcrd == 0 , 0, tmp_hogar1$mto_dept)
# *** Bancaria
aux_deuda_t_bnco <- tmp_deuda_t_bnco
aux_deuda_t_bnco$p8_21 <- as.integer(aux_deuda_t_bnco$p8_21)
aux_deuda_t_bnco$p8_21 <- ifelse(aux_deuda_t_bnco$p8_21 %in% c(999888, 999999), 0, aux_deuda_t_bnco$p8_21)
aux_deuda_t_bnco <- aggregate(aux_deuda_t_bnco[,c("p8_21")], by = list("LlaveHO"=aux_deuda_t_bnco$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(aux_deuda_t_bnco)[colnames(aux_deuda_t_bnco) == "x"] <- "mto_bnc"
aux_deuda_t_bnco$c_deptal <- 1
tmp_hogar1 <- merge(tmp_hogar1, aux_deuda_t_bnco, by = "LlaveHO", all.x = T)
tmp_hogar1$c_deptal.x <- ifelse(is.na(tmp_hogar1$c_deptal.x), 0, tmp_hogar1$c_deptal.x)
tmp_hogar1$c_deptal.y <- ifelse(is.na(tmp_hogar1$c_deptal.y), 0, tmp_hogar1$c_deptal.y)
tmp_hogar1$mto_bnc <- ifelse(is.na(tmp_hogar1$mto_bnc), 0, tmp_hogar1$mto_bnc)
tmp_hogar1$cred_tcrd <- ifelse(tmp_hogar1$c_deptal.x == 1 | tmp_hogar1$c_deptal.y == 1 , 1, 0)
tmp_hogar1$mto_tcrd <- ifelse(tmp_hogar1$cred_tcrd == 1, tmp_hogar1$mto_tcrd + tmp_hogar1$mto_bnc, tmp_hogar1$mto_tcrd)
colnames(tmp_hogar1)[colnames(tmp_hogar1) == "c_deptal.x"] <- "c_deptal"
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("c_deptal.y")]
# **********************************************
# ***creditos vehiculos
tmp_automoto$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_automoto, by = "LlaveHO", all.x = T)
tmp_hogar1$cred_aumo <- ifelse(tmp_hogar1$uni == 1, 1, tmp_hogar1$cred_aumo)
tmp_hogar1$cred_aumo <- ifelse(is.na(tmp_hogar1$cred_aumo), 0, tmp_hogar1$cred_aumo)
tmp_hogar1$mto_aumo <- ifelse(tmp_hogar1$uni == 1, tmp_hogar1$p7_12 + tmp_hogar1$p7_21,tmp_hogar1$cred_aumo)
tmp_hogar1$mto_aumo <- ifelse(is.na(tmp_hogar1$mto_aumo), 0, tmp_hogar1$mto_aumo)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p7_4_1", "p7_4_2", "factor", "LlaveVI.y", "p7_12", "p7_21")]
# **********************************************
# ***creditos nomina y/o personal
tmp_deuda_nomper$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_deuda_nomper, by = "LlaveHO", all.x = T)
tmp_hogar1$cred_nmpe <- ifelse(tmp_hogar1$uni == 1, 1, tmp_hogar1$cred_nmpe)
tmp_hogar1$mto_nmpe <- ifelse(tmp_hogar1$uni == 1, tmp_hogar1$p8_25 + tmp_hogar1$p8_41, tmp_hogar1$mto_nmpe)
tmp_hogar1$cred_nmpe <- ifelse(is.na(tmp_hogar1$cred_nmpe), 0, tmp_hogar1$cred_nmpe)
tmp_hogar1$mto_nmpe <- ifelse(is.na(tmp_hogar1$mto_nmpe ), 0, tmp_hogar1$mto_nmpe )
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p8_25", "p8_41", "factor", "x")]
# *****************************************************************
# **** Otros créditos
# ********** Creditos informales asociados a la vivienda Principal
tmp_cred_Ot1$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_cred_Ot1, by = "LlaveVI", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni ), 0, as.integer(tmp_hogar1$uni ))
tmp_hogar1$p4_43_1 <- ifelse(is.na(tmp_hogar1$p4_43_1 ), 0, as.integer(tmp_hogar1$p4_43_1 ))
tmp_hogar1$p4_46_1 <- ifelse(is.na(tmp_hogar1$p4_46_1 ), 0, as.integer(tmp_hogar1$p4_46_1 ))
tmp_hogar1$p4_43_2 <- ifelse(is.na(tmp_hogar1$p4_43_2 ), 0, as.integer(tmp_hogar1$p4_43_2 ))
tmp_hogar1$p4_46_2 <- ifelse(is.na(tmp_hogar1$p4_46_2 ), 0, as.integer(tmp_hogar1$p4_46_2 ))
tmp_hogar1$p4_43_3 <- ifelse(is.na(tmp_hogar1$p4_43_3 ), 0, as.integer(tmp_hogar1$p4_43_3 ))
tmp_hogar1$p4_46_3 <- ifelse(is.na(tmp_hogar1$p4_46_3 ), 0, as.integer(tmp_hogar1$p4_46_3 ))
tmp_hogar1$p4_43_4 <- ifelse(is.na(tmp_hogar1$p4_43_4 ), 0, as.integer(tmp_hogar1$p4_43_4 ))
tmp_hogar1$p4_46_4 <- ifelse(is.na(tmp_hogar1$p4_46_4 ), 0, as.integer(tmp_hogar1$p4_46_4 ))
tmp_hogar1$p4_51 <- ifelse(is.na(tmp_hogar1$p4_51 ), 0, as.integer(tmp_hogar1$p4_51 ))
tmp_hogar1$p4_54 <- ifelse(is.na(tmp_hogar1$p4_54 ), 0, as.integer(tmp_hogar1$p4_54 ))
tmp_hogar1$cred_inf_v <- ifelse(is.na(tmp_hogar1$cred_inf_v), 0, as.integer(tmp_hogar1$cred_inf_v))
tmp_hogar1$p4_46_1 <- ifelse(!tmp_hogar1$p4_46_1 %in% c(0, 999999888, 999999999) & tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, tmp_hogar1$p4_46_1, 0)
tmp_hogar1$p4_46_2 <- ifelse(!tmp_hogar1$p4_46_2 %in% c(0, 9999888 , 9999999 ) & tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, tmp_hogar1$p4_46_2, 0)
tmp_hogar1$p4_46_3 <- ifelse(!tmp_hogar1$p4_46_3 %in% c(0, 999999888, 999999999) & tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, tmp_hogar1$p4_46_3, 0)
tmp_hogar1$p4_46_4 <- ifelse(!tmp_hogar1$p4_46_4 %in% c(0, 999999888, 999999999) & tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, tmp_hogar1$p4_46_4, 0)
tmp_hogar1$p4_54 <- ifelse(!tmp_hogar1$p4_54 %in% c(0, 999999888, 999999999) & tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, tmp_hogar1$p4_54 , 0)
tmp_hogar1$cred_rest <- ifelse(tmp_hogar1$h_ppal == 1 & tmp_hogar1$uni == 1, 1, tmp_hogar1$cred_rest)
tmp_hogar1$mto_rest <- ifelse(tmp_hogar1$cred_rest == 1, tmp_hogar1$p4_46_1 + tmp_hogar1$p4_46_2 +
tmp_hogar1$p4_46_3 + tmp_hogar1$p4_46_4 +
tmp_hogar1$p4_54, tmp_hogar1$mto_rest)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni","p4_43_1", "p4_46_1", "p4_43_2", "p4_46_2", "p4_43_3", "p4_46_3", "p4_43_4", "p4_46_4", "p4_51", "p4_54", "cred_inf_v")]
# ********** Creditos grupal
aux_grupal <- tmp_grupal
aux_grupal$p8_49 <- ifelse(aux_grupal$p8_49 %in% c(999888,999999), 0, aux_grupal$p8_49)
aux_grupal <- aggregate(aux_grupal[,c("p8_49")], by = list("LlaveHO"=aux_grupal$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(aux_grupal)[colnames(aux_grupal) == "x"] <- "p8_49"
aux_grupal$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, aux_grupal, by = "LlaveHO", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni ), 0, tmp_hogar1$uni )
tmp_hogar1$p8_49 <- ifelse(is.na(tmp_hogar1$p8_49), 0, tmp_hogar1$p8_49)
tmp_hogar1$cred_rest <- ifelse(tmp_hogar1$uni == 1 , 1, tmp_hogar1$cred_rest)
tmp_hogar1$mto_rest <- ifelse(tmp_hogar1$uni == 1 , tmp_hogar1$mto_rest + tmp_hogar1$p8_49, tmp_hogar1$mto_rest)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p8_49")]
## ********** Creditos educativo
tmp_educativo$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_educativo, by = "LlaveHO", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni ), 0, tmp_hogar1$uni )
tmp_hogar1$p8_34 <- ifelse(is.na(tmp_hogar1$p8_34), 0, tmp_hogar1$p8_34)
tmp_hogar1$cred_rest <- ifelse(tmp_hogar1$uni == 1 , 1, tmp_hogar1$cred_rest)
tmp_hogar1$mto_rest <- ifelse(tmp_hogar1$uni == 1 , tmp_hogar1$mto_rest + tmp_hogar1$p8_34, tmp_hogar1$mto_rest)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p8_34")]
# ********** otros Creditos
tmp_cred_Ot2$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_cred_Ot2, by = "LlaveHO", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni ), 0, tmp_hogar1$uni )
tmp_hogar1$p8_4_1 <- ifelse(is.na(tmp_hogar1$p8_4_1), 0, tmp_hogar1$p8_4_1)
tmp_hogar1$p8_4_2 <- ifelse(is.na(tmp_hogar1$p8_4_2), 0, tmp_hogar1$p8_4_2)
tmp_hogar1$p8_4_3 <- ifelse(is.na(tmp_hogar1$p8_4_3), 0, tmp_hogar1$p8_4_3)
tmp_hogar1$p8_4_4 <- ifelse(is.na(tmp_hogar1$p8_4_4), 0, tmp_hogar1$p8_4_4)
tmp_hogar1$cred_rest <- ifelse(tmp_hogar1$uni == 1 , 1, tmp_hogar1$cred_rest)
tmp_hogar1$mto_rest <- ifelse(tmp_hogar1$uni == 1 , tmp_hogar1$mto_rest + tmp_hogar1$p8_4_1 +
tmp_hogar1$p8_4_2 + tmp_hogar1$p8_4_3 + tmp_hogar1$p8_4_4, tmp_hogar1$mto_rest)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p8_4_1", "p8_4_2", "p8_4_3", "p8_4_4", "cred_inf")]
# ********** Credito Agricola
tmp_cred_agricola$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, tmp_cred_agricola, by = "LlaveHO", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni ), 0, tmp_hogar1$uni )
tmp_hogar1$p6_27 <- ifelse(is.na(tmp_hogar1$p6_27), 0, tmp_hogar1$p6_27)
tmp_hogar1$p6_27 <- ifelse(tmp_hogar1$p6_27 %in% c(9999888, 9999999), 0,tmp_hogar1$p6_27)
tmp_hogar1$cred_rest <- ifelse(tmp_hogar1$uni == 1 , 1, tmp_hogar1$cred_rest)
tmp_hogar1$mto_rest <- ifelse(tmp_hogar1$uni == 1 , tmp_hogar1$mto_rest + tmp_hogar1$p6_27, tmp_hogar1$mto_rest)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p6_25", "p6_27", "factor.y")]
# ********** Credito Negocio
aux_cred_neg <- tmp_cred_neg
aux_cred_neg$p6_17 <- ifelse(aux_cred_neg$p6_17 %in% c(9999888, 9999999), 0, aux_cred_neg$p6_17)
aux_cred_neg <- aggregate(tmp_cred_neg[,c("p6_17")], by = list("LlaveHO"=tmp_cred_neg$LlaveHO), FUN = sum, na.rm=TRUE)# obtener on df agrupado por hogar
colnames(aux_cred_neg)[colnames(aux_cred_neg) == "x"] <- "p6_17"
aux_cred_neg$uni <- 1
tmp_hogar1 <- merge(tmp_hogar1, aux_cred_neg, by = "LlaveHO", all.x = T)
tmp_hogar1$uni <- ifelse(is.na(tmp_hogar1$uni ), 0, tmp_hogar1$uni )
tmp_hogar1$p6_17 <- ifelse(is.na(tmp_hogar1$p6_17), 0, tmp_hogar1$p6_17)
tmp_hogar1$cred_rest <- ifelse(tmp_hogar1$uni == 1 , 1, tmp_hogar1$cred_rest)
tmp_hogar1$mto_rest <- ifelse(tmp_hogar1$uni == 1 , tmp_hogar1$mto_rest + tmp_hogar1$p6_17, tmp_hogar1$mto_rest)
tmp_hogar1 <- tmp_hogar1[, !names(tmp_hogar1) %in% c("uni", "p6_17", "factor.x")]
# ****************************
# ****Hogares con credito No hipotecario
tmp_hogar1$cred_nohip <- ifelse(tmp_hogar1$cred_tcrd + tmp_hogar1$cred_aumo +
tmp_hogar1$cred_nmpe + tmp_hogar1$cred_rest > 0, 1, 0)
tmp_hogar1$mto_nohipo <- tmp_hogar1$mto_tcrd + tmp_hogar1$mto_aumo +
tmp_hogar1$mto_nmpe + tmp_hogar1$mto_rest
# ****************************
# ****Hogares con credito
tmp_hogar1$cred_tot <- ifelse(tmp_hogar1$cred_hip + tmp_hogar1$cred_nohip > 0, 1, 0)
tmp_hogar1$mto_ctot <- tmp_hogar1$mto_hipot + tmp_hogar1$mto_nohipo
tmp_hogar1$aux1 <- tmp_hogar1$fac_hog * tmp_hogar1$cred_tot
tmp_hogar1$aux2 <- tmp_hogar1$fac_hog * tmp_hogar1$mto_ctot
gpo1 <- sum(aggregate(tmp_hogar1[,c("aux1")],by = list(tmp_hogar1$LlaveHO), FUN = sum, na.rm=TRUE)$x) # obtener on df agrupado por hogar
gpo2 <- sum(aggregate(tmp_hogar1[,c("aux2")],by = list(tmp_hogar1$LlaveHO), FUN = sum, na.rm=TRUE)$x)/1000000 # obtener on df agrupado por hogar
nofinan <- rbind(nofinan, c(2, "-Deuda", gpo1, gpo2))
# CREACION DEL DATASET
# columna de deusas
rel_ingxdeuda <- tmp_hogar1[, c("LlaveHO", "mto_ctot")]
rel_ingxdeuda
dataset <- na.omit(rel_ingxdeuda)
str(dataset)
dataset <- conversor(dataset)
# Quitamos los ceros
deudas <- dataset[dataset$mto_ctot != 0, ]
# llamamos el dataset del ingreso anual
ing_anual <- read.csv(file = "ingresoanual.csv", header=TRUE, sep=",", colClasses="character")
ingreso_men <- ing_anual[, c("llaveho", "ingxtrab")]
ingreso_men$ingxtrab <- as.numeric(ingreso_men$ingxtrab)
head(ingreso_men)
head(tmp_hogar1)
riqueza$Riqueza <- tmp_hogar1$val_nofin + tmp_hogar1$val_finan
riqueza <- 0
riqueza$Riqueza <- 0
riqueza$Deuda <- 0
riqueza  <- tmp_hogar1$val_nofin + tmp_hogar1$val_finan
Deuda <-  - tmp_hogar1$mto_ctot
Rel_RiqxDeu <- data.frame(
Riqueza = as.numeric(riqueza),
Deuda = as.numeric(Deuda)
)
# Create a scatterplot
plot(Rel_RiqxDeu$Riqueza, Rel_RiqxDeu$Deuda,
main = "Relacion entre Riqueza y deudas",  # Title of the plot
xlab = "Riqueza Finan y No Finan",             # Label for the x-axis
ylab = "Deuda total",             # Label for the y-axis
pch = 20,                          # Type of point (16 is a filled circle)
col = "blue"                       # Color of the points
)
head(Rel_RiqxDeu)
Deuda <-   tmp_hogar1$mto_ctot
riqueza  <- tmp_hogar1$val_nofin + tmp_hogar1$val_finan
riqueza$Riqueza <- 0
riqueza$Deuda <- 0
Rel_RiqxDeu <- data.frame(
Riqueza = as.numeric(riqueza),
Deuda = as.numeric(Deuda)
)
head(Rel_RiqxDeu)
head(Rel_RiqxDeu)
nofinan
gpo2
tmp_hogar1$mto_ctot
Deuda <-   tmp_hogar1$mto_ctot
riqueza  <- tmp_hogar1$val_nofin + tmp_hogar1$val_finan
Rel_RiqxDeu <- data.frame(
Riqueza = riqueza,
Deuda = Deuda
)
head(Rel_RiqxDeu)
plot(Rel_RiqxDeu$Riqueza, Rel_RiqxDeu$Deuda,
main = "Relacion entre Riqueza y deudas",  # Title of the plot
xlab = "Riqueza Finan y No Finan",             # Label for the x-axis
ylab = "Deuda total",             # Label for the y-axis
pch = 20,                          # Type of point (16 is a filled circle)
col = "blue"                       # Color of the points
)
head(tmp_hogar1)
# CREACION DEL DATASET
# columna de deusas
rel_ingxdeuda <- tmp_hogar1[, c("LlaveHO", "mto_ctot")]
rel_ingxdeuda
dataset <- na.omit(rel_ingxdeuda)
str(dataset)
dataset <- conversor(dataset)
# Quitamos los ceros
deudas <- dataset[dataset$mto_ctot != 0, ]
# llamamos el dataset del ingreso anual
ing_anual <- read.csv(file = "ingresoanual.csv", header=TRUE, sep=",", colClasses="character")
ingreso_men <- ing_anual[, c("llaveho", "ingxtrab")]
ingreso_men$ingxtrab <- as.numeric(ingreso_men$ingxtrab)
head(ingreso_men)
#ingreso_men <- data.frame(llaveho = ing_anual$llaveho, ingxtrab = ing_anual$ingxtrab / 12)
ingreso_men$ingxtrab <- ingreso_men$ingxtrab / 12
ingreso_men <- ingreso_men[ingreso_men$ingxtrab !=0,]
ingreso_men
# unimos las dos tablas
relacion_deuxing <- merge(deudas,ingreso_men,by = "llaveho", all.x = T)
relacion_deuxing
relacion_deuxing <- na.omit(relacion_deuxing)
relacion_deuxing
# Export the dataset to a CSV file
write.csv(relacion_deuxing, file = "rel_ing_deu.csv", row.names = FALSE)
# Create a scatterplot
plot(relacion_deuxing$ingxtrab, relacion_deuxing$mto_ctot,
main = "Relacion entre ingreso y deudas",  # Title of the plot
xlab = "Ingreso de nomina",             # Label for the x-axis
ylab = "Deuda total",             # Label for the y-axis
pch = 20,                          # Type of point (16 is a filled circle)
col = "blue"                       # Color of the points
)
relacion_deuxing
